#튜플,range, 문자열은 읽기 전용이라 값을 쓸 수 없다
b = (0,0,0,0,0)
print(b[0] = 38)    #에러
r = range(0,10,2)
print(r[0] = 3)    #에러
hello = 'Hello, world!'
print(hello[0]='A')    #에러

#시퀀스 객체 요소 삭제
a = [38,21,53,62,19]
del a[2]
print(a)

#튜플은 읽기 전용이라 삭제할 수 없다
b = (38,21,53,62,19)
print(del b[2])     #에러

#range나 문자열도 삭제할 수 없다.
r = range(0,10,2)
print(del r[2])     #에러
hello = 'Hello, world!'
print(del hello[2])     #에러

#
#시퀀스 슬라이스
#시퀀스 객체의 일부를 잘라냄
a = [0,10,20,30,40,50,60,70,80,90]
print(a[0:4])       #[0, 10, 20, 30]
print(a[0:9])       #90은 안나온다
print(a[0:10])      #다 나온다
#뒤에값-1까지 나오는건데 시작값이랑 같은값이 입력되면 아무것도 안나온다
print(a[1:1])       #아무것도 안나온다
print(a[1:2])       #[10]
#리스트의 중간 부분 가져오기
print(a[4:7])       #[40, 50, 60]
print(a[4:-1])      #[40, 50, 60, 70, 80] / 음수를 인덱스로 지정할 수 도 있다
print(a[-6:-3])     #[40, 50, 60]
#인덱스 증가폭 사용하기
#시퀀스객체[시작인덱스:끝인덱스:인덱스증가폭]
print(a[2:8:3])     #[20, 50]
#시작 인덱스와 끝 인덱스를 생략할 수 도 있다
print(a[:7])        #[0, 10, 20, 30, 40, 50, 60]
print(a[7:])        #[70, 80, 90]
print(a[:])         #리스트 전체를 가져옴
print(a[7::2])      #[70, 90]
print(a[::2])       #[0, 20, 40, 60, 80]
print(a[::])        #리스트 전체를 가져옴 / a 와 a[:], a[::]는 같다고 생각해도 된다
print(a[0:len(a)])  #리스트 전체를 가져옴
print(a[:len(a)])   #리스트 전체를 가져옴

#튜플 슬라이스 사용하기
b = (0,10,20,30,40,50,60,70,80,90)
print(b[4:7])       #(40, 50, 60)
print(b[4:])        #(40, 50, 60, 70, 80, 90)
print(b[:7:2])      #(0, 20, 40, 60)

#range 슬라이스 사용하기
r = range(10)
print(r)            #range(0, 10)
print(r[4:7])       #range(4, 7)
print(r[4:])        #range(4, 10)
print(r[:7:2])      #range(0, 7, 2)
print(list(r[4:7])) #[4, 5, 6]
print(list(r[4:]))  #[4, 5, 6, 7, 8, 9]
print(list(r[:7:2]))#[0, 2, 4, 6]

#문자열 슬라이스 사용하기
hello = 'Hello, world!'
print(hello[2:9])   #llo, wo
print(hello[2:])    #llo, world!
print(hello[:9:2])  #Hlo o

#
#슬라이스에 요소 할당하기
#값이 바뀐다
a = [0,10,20,30,40,50,60,70,80,90]
a[2:5] = ['a','b','c']
print(a)            #[0, 10, 'a', 'b', 'c', 50, 60, 70, 80, 90]

#슬라이스 해당 부분 전체가 빠지고 새로 들어간다
#개수를 맞추지 않아도 상관없다
a = [0,10,20,30,40,50,60,70,80,90]
a[2:5] = ['a']
print(a)            #[0, 10, 'a', 50, 60, 70, 80, 90]

a = [0,10,20,30,40,50,60,70,80,90]
a[2:5] = ['a','b','c','d','e']
print(a)            #[0, 10, 'a', 'b', 'c', 'd', 'e', 50, 60, 70, 80, 90]

#증가폭을 지정하여 요소 할당하기
#이 경우에는 개수 맞춰야된다
a = [0,10,20,30,40,50,60,70,80,90]
a[2:8:2] = ['a','b','c']
print(a)            #[0, 10, 'a', 30, 'b', 50, 'c', 70, 80, 90]

a = [0,10,20,30,40,50,60,70,80,90]
a[2:8:2] = ['a','b']             #에러
a[2:8:2] = ['a','b','c','d']    #에러
print(a)

#튜플, range, 문자열은 범위를 지정해도 요소를 할당할 수 없다
b = (0,10,20,30,40,50,60,70,80,90)
b[2:5] = ('a','b','c')          #에러

r = range(10)
range[2:5] = (0,1,2)            #에러
range[2:5] = range(0,3)         #에러

hello = 'Hello, world!'
hello[7:13] = 'Python'          #에러

#
#del로 슬라이스 삭제하기
#원래 있던 리스트가 변경되며 새 리스트는 생성되지 않음
a = [0,10,20,30,40,50,60,70,80,90]
del a[2:5]
print(a)            #[0, 10, 50, 60, 70, 80, 90]

a = [0,10,20,30,40,50,60,70,80,90]
del a[2:8:2]
print(a)            #[0, 10, 30, 50, 70, 80, 90] / 2,4,6인 요소 20,40,60이 삭제됨

#튜플, range, 문자열은 del로 슬라이스를 삭제할 수 없다
b = (0,10,20,30,40,50,60,70,80,90)
del b[2:5]          #에러
r = range(10)       
del r[2:5]          #에러
hello = 'Hello, world!'
del hello[2:9]      #에러

#리스트 year에 연도, population에 서울시 인구수
#최근 3년간 연도와 인구수가 리스트에 출력되게 만드시오
year = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
population = [10249679, 10195318, 10143645, 10103233, 10022181, 9930616, 9857426, 9838892]
print(year[-3:])            #[2016, 2017, 2018]
print(population[-3:])      #[9930616, 9857426, 9838892]

#튜플 n에서 인덱스가 홀수인 요소들이 출력되게 만드시오
n = (-32, 75, 97, -10, 9, 32, 4, -15, 0, 76, 14, 2)
print(n[1::2])              #(75, -10, 32, -15, 76, 2)

#숫자 또는 문자열 여러 개가 입력되어 리스트 x에 저장된다
#마지막 요소 5개를 *삭제*한 뒤 튜플로 출력되게 만드시오
x = input().split()
del x[-5:]
print(tuple(x))             #입력 : 1 2 3 4 5 6 7 8 9 10
                            #출력 : ('1', '2', '3', '4', '5')
                            #입력 : oven bat pony total leak wreck curl crop space many loss knee
                            #출력 : ('oven', 'bat', 'pony', 'total', 'leak', 'wreck', 'curl')

#문자열 두 개가 각 줄에 입력(문자열의 길이는 정해져 있지 않음)
#첫번째 문자열에서 인덱스가 홀수인 문자와
#두번째 문자열에서 인덱스가 짝수인 문자를
#연결하여 출력하는 프로그램
#안내문자열은 출력하지 않아도 됨
#연결 순서는 첫번째 문자열, 두번째 문자열 순
#0은 짝수로 처리
#ex) asdfg, zxcvb -> sfzcb
x = input()
y = input()
print(x)
print(y)
print(x[1::2])
print(y[::2])
z = x[1::2] + y[::2]
print(z)

